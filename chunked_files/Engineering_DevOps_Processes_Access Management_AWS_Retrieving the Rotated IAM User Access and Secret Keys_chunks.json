[
    {
        "id": "engineering_devops_processes_access-management_aws_retrieving-the-rotated-iam-user-access-and-secret-keys-chunk-0",
        "name": "Retrieving the Rotated IAM User Access and Secret Keys.txt - Introduction to AWS Authentication",
        "breadcrumb": [
            "Engineering",
            "DevOps",
            "Processes",
            "Access Management",
            "AWS"
        ],
        "description": "This section explains that access keys are used for authentication in AWS. They consist of two parts: an access key ID and a secret access key. These two components work together like a username and password, and must be used in combination to authenticate requests made to AWS services.",
        "use_cases": [
            "Authenticating requests to AWS services",
            "Accessing AWS resources",
            "Programmatic access to AWS APIs",
            "Automating AWS tasks"
        ],
        "capabilities": [
            "Access key ID",
            "Secret access key",
            "Authentication",
            "Request authentication",
            "Secure access"
        ],
        "references": []
    },
    {
        "id": "engineering_devops_processes_access-management_aws_retrieving-the-rotated-iam-user-access-and-secret-keys-chunk-1",
        "name": "Retrieving the Rotated IAM User Access and Secret Keys.txt - Access Keys",
        "breadcrumb": [
            "Engineering",
            "DevOps",
            "Processes",
            "Access Management",
            "AWS"
        ],
        "description": "This section explains how AWS access keys are used to authenticate programmatic access to AWS services. Access keys consist of an access key ID and a secret access key, which acts like a password. The AWS CLI tool stores these access keys in a local file named 'credentials' within the '.aws' folder in the user's home directory. This allows users to securely access AWS services through code or command-line tools without exposing their credentials.",
        "use_cases": [
            "Programmatic access to AWS services",
            "Authenticating AWS CLI commands",
            "Integrating AWS services with custom applications",
            "Automating AWS resource management"
        ],
        "capabilities": [
            "Access key ID",
            "Secret access key",
            "AWS CLI credentials storage",
            "Local credentials file",
            "User authentication",
            "Programmatic access"
        ],
        "references": []
    },
    {
        "id": "engineering_devops_processes_access-management_aws_retrieving-the-rotated-iam-user-access-and-secret-keys-chunk-2",
        "name": "Retrieving the Rotated IAM User Access and Secret Keys.txt - Storing AWS Credentials",
        "breadcrumb": [
            "Engineering",
            "DevOps",
            "Processes",
            "Access Management",
            "AWS"
        ],
        "description": "This section explains the importance of regularly rotating access keys for AWS IAM users. It is a security best practice to periodically identify and remove old or unused access keys to mitigate the risk of these keys being compromised. The section states that all IAM users must use a new access key and secret key every 70 days to reduce the potential impact if the keys are compromised.",
        "use_cases": [
            "Identifying old or unused IAM access keys",
            "Removing security vulnerabilities from AWS accounts",
            "Rotating access keys on a regular schedule",
            "Reducing the business impact if access keys are compromised"
        ],
        "capabilities": [
            "Automation process to identify old or unused IAM access keys",
            "Rotating IAM user access keys and secret keys",
            "Enforcing a 70-day rotation policy for IAM user access keys"
        ],
        "references": []
    },
    {
        "id": "engineering_devops_processes_access-management_aws_retrieving-the-rotated-iam-user-access-and-secret-keys-chunk-3",
        "name": "Retrieving the Rotated IAM User Access and Secret Keys.txt - Rotating Access Keys",
        "breadcrumb": [
            "Engineering",
            "DevOps",
            "Processes",
            "Access Management",
            "AWS"
        ],
        "description": "This section explains the process of rotating access keys in AWS, which involves deleting existing access keys and creating new ones. It mentions that rotating access keys is necessary because existing pre-signed URLs will stop working after the access keys are changed, even if the URLs have a valid expiration date. The section introduces AWS Secrets Manager as a service that automates the rotation of access keys every 70 days and sends a notification email to the user when new keys are generated.",
        "use_cases": [
            "Rotating access keys for security purposes",
            "Managing pre-signed URLs that rely on access keys",
            "Automating access key rotation using AWS Secrets Manager",
            "Receiving notifications when access keys are rotated"
        ],
        "capabilities": [
            "Access key rotation",
            "Pre-signed URL invalidation after key rotation",
            "Automated access key rotation with AWS Secrets Manager",
            "Email notifications for key rotation",
            "Lifecycle management of access keys",
            "Centralized secrets management"
        ],
        "references": []
    },
    {
        "id": "engineering_devops_processes_access-management_aws_retrieving-the-rotated-iam-user-access-and-secret-keys-chunk-4",
        "name": "Retrieving the Rotated IAM User Access and Secret Keys.txt - AWS Secrets Manager",
        "breadcrumb": [
            "Engineering",
            "DevOps",
            "Processes",
            "Access Management",
            "AWS"
        ],
        "description": "This section explains the initial step to retrieve rotated IAM user access and secret keys using the AWS Secrets Manager service. It instructs the user to sign in to the AWS Management Console using their AWS account ID, IAM user name, and password. This step is necessary to access the AWS Secrets Manager and retrieve the rotated keys securely.",
        "use_cases": [
            "Retrieving rotated IAM user access and secret keys",
            "Accessing the AWS Secrets Manager service",
            "Securely managing and retrieving sensitive credentials"
        ],
        "capabilities": [
            "AWS Management Console access",
            "IAM user authentication",
            "Credential rotation",
            "Secrets management",
            "Secure credential retrieval"
        ],
        "references": [
            "https://aws.amazon.com/console/>__"
        ]
    },
    {
        "id": "engineering_devops_processes_access-management_aws_retrieving-the-rotated-iam-user-access-and-secret-keys-chunk-5",
        "name": "Retrieving the Rotated IAM User Access and Secret Keys.txt - Steps to Retrieve Rotated Keys",
        "breadcrumb": [
            "Engineering",
            "DevOps",
            "Processes",
            "Access Management",
            "AWS"
        ],
        "description": "This section provides step-by-step instructions for retrieving rotated IAM (Identity and Access Management) user access and secret keys from AWS Secrets Manager. It explains how to navigate to the Secrets Manager service, search for the secret containing your IAM username, retrieve the secret value to obtain the new access keys, and update the AWS credentials file with the new keys. This process is necessary when your IAM user access keys are rotated for security purposes.",
        "use_cases": [
            "Retrieving rotated IAM user access and secret keys",
            "Updating AWS credentials file with new access keys",
            "Maintaining secure access to AWS resources"
        ],
        "capabilities": [
            "AWS Secrets Manager",
            "IAM user access key rotation",
            "Credential management",
            "Secure storage of access keys",
            "Command-line interface (CLI) access"
        ],
        "references": [
            "https://alpha.razorpay.com/_static/file/bb8a4c97dc0b7956cdce38cea2ebd3c0.png",
            "https://alpha.razorpay.com/_static/file/b09d45b677d8b2fc0ad809a39ab5b69e.png",
            "https://alpha.razorpay.com/_static/file/73376dd6df72468f73f6207052d7756f.png"
        ]
    }
]