[
    {
        "id": "engineering_devops_dev-self-serve_secret-watcher-chunk-0",
        "name": "Secret Watcher.txt - Problem Statement",
        "breadcrumb": [
            "Engineering",
            "DevOps",
            "Dev Self Serve"
        ],
        "description": "This section discusses the need to automatically update and restart application pods whenever secrets or sensitive configuration data stored in Kubernetes ConfigMaps or Secrets are changed. Currently, this process requires manual intervention to trigger a rolling deployment, which can be time-consuming and error-prone. The proposed solution involves implementing a mechanism to watch for changes in ConfigMaps and Secrets, and automatically initiate a rolling upgrade of the relevant Deployments when changes are detected.",
        "use_cases": [
            "Automatically updating application pods when secrets or sensitive configuration data changes",
            "Reducing manual effort and potential errors in updating application pods",
            "Ensuring application pods are always running with the latest secrets and configuration data"
        ],
        "capabilities": [
            "Watch for changes in Kubernetes ConfigMaps and Secrets",
            "Trigger rolling upgrade of relevant Deployments",
            "Automate the process of updating application pods with new secrets or configuration data"
        ],
        "references": []
    },
    {
        "id": "engineering_devops_dev-self-serve_secret-watcher-chunk-1",
        "name": "Secret Watcher.txt - Solution",
        "breadcrumb": [
            "Engineering",
            "DevOps",
            "Dev Self Serve"
        ],
        "description": "This section explains a tool called Reloader that can automatically detect changes in Kubernetes ConfigMaps and Secrets, and trigger rolling updates for the related Deployments or Rollouts that use those ConfigMaps or Secrets. This allows seamless updates to application configurations without manual intervention or downtime.",
        "use_cases": [
            "Automatically update application configurations when ConfigMaps or Secrets change",
            "Perform rolling upgrades of Pods when their configurations are updated",
            "Eliminate manual intervention for updating application configurations",
            "Ensure zero downtime during configuration updates"
        ],
        "capabilities": [
            "Watch changes in ConfigMaps and Secrets",
            "Discover Deployments and Rollouts using ConfigMaps or Secrets",
            "Detect ConfigMap or Secret usage via environment variables or volume mounts",
            "Trigger rolling upgrades of related Pods",
            "Automatic configuration with annotations"
        ],
        "references": [
            "https://github.com/stakater/Reloader"
        ]
    },
    {
        "id": "engineering_devops_dev-self-serve_secret-watcher-chunk-2",
        "name": "Secret Watcher.txt - Configuration",
        "breadcrumb": [
            "Engineering",
            "DevOps",
            "Dev Self Serve"
        ],
        "description": "This section provides a configuration snippet for a Kubernetes Deployment resource. It specifies an annotation 'reloader.stakater.com/auto' with a value of 'true', which likely enables automatic reloading or restarting of the deployment when changes are detected. The configuration is written in YAML format, which is commonly used for defining Kubernetes resources.",
        "use_cases": [
            "Enabling automatic reloading or restarting of a Kubernetes Deployment",
            "Configuring annotations for a Kubernetes Deployment",
            "Defining the template for a Kubernetes Deployment"
        ],
        "capabilities": [
            "Kubernetes Deployment configuration",
            "Annotation configuration",
            "Template configuration",
            "YAML format"
        ],
        "references": []
    },
    {
        "id": "engineering_devops_dev-self-serve_secret-watcher-chunk-3",
        "name": "Secret Watcher.txt - Alerting",
        "breadcrumb": [
            "Engineering",
            "DevOps",
            "Dev Self Serve"
        ],
        "description": "This section appears to be about alerting capabilities related to the Secret Watcher tool. However, the content provided is empty, so it's difficult to provide a detailed description. Typically, an alerting section would explain how the tool can notify users or administrators when certain events or conditions occur, such as when secrets or sensitive data are accessed or modified.",
        "use_cases": [
            "Monitoring and alerting on unauthorized access or changes to sensitive data",
            "Ensuring compliance with data security policies and regulations",
            "Detecting and responding to potential data breaches or security incidents"
        ],
        "capabilities": [
            "Alerting",
            "Notifications",
            "Monitoring",
            "Security",
            "Compliance"
        ],
        "references": [
            "https://github.com/stakater/Reloader#how-to-use-reloader>"
        ]
    },
    {
        "id": "engineering_devops_dev-self-serve_secret-watcher-chunk-4",
        "name": "Secret Watcher.txt - Note:",
        "breadcrumb": [
            "Engineering",
            "DevOps",
            "Dev Self Serve"
        ],
        "description": "This section explains the functionality of Secret Watcher, a tool that automatically rotates pods when secrets are updated. It clarifies that the process of adding secrets via credstash and syncing them with kubestash remains unchanged. Secret Watcher is an optional feature that enables automatic pod rotation when secrets change, providing an alternative to scheduled rotation via Spinnaker. If the same secret is used in multiple places, all pods with the relevant annotation will be rotated.",
        "use_cases": [
            "Automatically rotating pods when secrets are updated",
            "Providing an alternative to scheduled rotation via Spinnaker",
            "Handling scenarios where the same secret is used in multiple places"
        ],
        "capabilities": [
            "Automatic pod rotation on secret changes",
            "Notification on Slack channel #prod-secret-watcher",
            "No change in workflow for adding secrets via credstash and syncing with kubestash",
            "Optional functionality for enabling automatic pod rotation",
            "Ability to handle scenarios where the same secret is used in multiple places"
        ],
        "references": []
    }
]