[
    {
        "id": "engineering_devops_architecture_aws_rds_proxysql-chunk-0",
        "name": "ProxySQL.txt - Background",
        "breadcrumb": [
            "Engineering",
            "DevOps",
            "Architecture",
            "AWS",
            "RDS"
        ],
        "description": "This section explains that ProxySQL is being used as a proxy between the Datastore Jump servers and the RDS (MySQL) instances. ProxySQL enables audit logging, which is required for tracking manual queries, as MySQL 8.0 does not support the MariaDB Audit Plugin. ProxySQL instances are running as Docker containers on an EC2 instance, with one container per RDS instance. The audit logs generated by ProxySQL are sent to Sumo Logic for monitoring and analysis. Direct access from the Datastore Jump servers to the RDS instances is blocked, and all connections must go through ProxySQL.",
        "use_cases": [
            "Enabling audit logging for MySQL instances",
            "Controlling and monitoring access to MySQL instances",
            "Centralized logging and monitoring of database queries"
        ],
        "capabilities": [
            "Audit logging",
            "Access control",
            "Proxy for MySQL connections",
            "Docker containerization",
            "Integration with Sumo Logic"
        ],
        "references": [
            "https://docs.google.com/spreadsheets/d/1cV1FghNlgjKJRuhos8L9blKcGG0VjPLct4AsL-4aozc/edit?usp=sharing"
        ]
    },
    {
        "id": "engineering_devops_architecture_aws_rds_proxysql-chunk-1",
        "name": "ProxySQL.txt - Procedure to Connect to RDS",
        "breadcrumb": [
            "Engineering",
            "DevOps",
            "Architecture",
            "AWS",
            "RDS"
        ],
        "description": "This section provides information on how to connect to various MySQL databases hosted on Amazon RDS (Relational Database Service) within the Razorpay VPC (Virtual Private Cloud). It lists the DNS hostnames, user ports, and admin ports for different database instances like prod-api, replica-prod-api, esearch-prod-api, and others. The section outlines the steps to connect to any of these RDS instances, which involve SSH-ing into the jump box and datastore jump box, and then running a MySQL command with the appropriate hostname, username, port, and password.",
        "use_cases": [
            "Connecting to production databases for querying or managing data",
            "Accessing replica databases for read-only operations or analytics",
            "Connecting to specific databases like payments, services, or analytics databases",
            "Administering or managing databases through the admin ports"
        ],
        "capabilities": [
            "Listing of DNS hostnames for various MySQL databases",
            "Providing user ports and admin ports for each database instance",
            "Steps to connect to any RDS instance using SSH and MySQL command",
            "Ability to connect to different types of databases (prod, replica, specific services)",
            "Segregation of databases based on services or functionality"
        ],
        "references": []
    },
    {
        "id": "engineering_devops_architecture_aws_rds_proxysql-chunk-2",
        "name": "ProxySQL.txt - Logs",
        "breadcrumb": [
            "Engineering",
            "DevOps",
            "Architecture",
            "AWS",
            "RDS"
        ],
        "description": "This section provides information about accessing the ProxySQL database, retrieving logs from Sumo Logic, and creating a new ProxySQL Docker image. It explains how to connect to the ProxySQL database using a MySQL client, and provides a query to search for audit logs in Sumo Logic. Additionally, it includes a command to run a Docker container for ProxySQL with various configuration options.",
        "use_cases": [
            "Accessing the ProxySQL database",
            "Retrieving audit logs from Sumo Logic",
            "Creating a new ProxySQL Docker image with specific configurations"
        ],
        "capabilities": [
            "MySQL client connection",
            "Sumo Logic log retrieval",
            "Docker container deployment",
            "Configuration options for ProxySQL",
            "Audit logging",
            "Connection management"
        ],
        "references": [
            "http://c.rzp.io/razorpay/onggi:proxysql-v3164",
            "https://razorpay-prod.app.cx180.coralogix.com/#/query-new/archive-logs?id=44jMcGSmuVu&page=0&archiveQueryType=cx-data>"
        ]
    }
]