[
    {
        "id": "engineering_devops_run-books-and-sops_checkov-policy-checking-in-atlantis-chunk-0",
        "name": "Checkov Policy Checking in Atlantis.txt - Atlantis Workflow Changes",
        "breadcrumb": [
            "Engineering",
            "DevOps",
            "Run books and SOPs"
        ],
        "description": "This section explains the workflow of policy checking in Atlantis, a tool used for automating Terraform workflows. When an 'atlantis plan' command is executed, a policy check is automatically triggered. After the plan results are generated by Atlantis, an additional comment is posted containing the policy check results. The section mentions that there can be two possible outcomes of the policy check.",
        "use_cases": [
            "Automating policy checks as part of Terraform workflows",
            "Integrating policy checks with Atlantis for Terraform deployments",
            "Receiving policy check results alongside Atlantis plan results"
        ],
        "capabilities": [
            "Automatic policy check triggering",
            "Policy check results reporting",
            "Integration with Atlantis Terraform workflows",
            "Potential for two outcomes of policy checks"
        ],
        "references": []
    },
    {
        "id": "engineering_devops_run-books-and-sops_checkov-policy-checking-in-atlantis-chunk-1",
        "name": "Checkov Policy Checking in Atlantis.txt - .",
        "breadcrumb": [
            "Engineering",
            "DevOps",
            "Run books and SOPs"
        ],
        "description": "This section explains the scenario when all policy checks performed by Checkov pass successfully during the Atlantis workflow. It illustrates this scenario with an image showing a green checkmark, indicating that no violations were found. In such cases, the workflow proceeds without any interruptions or changes, as all the defined policies have been adhered to.",
        "use_cases": [
            "Continuous compliance checking during Atlantis workflow",
            "Ensuring adherence to defined policies before deployment",
            "Automated policy validation as part of the deployment process",
            "Visualizing the status of policy checks"
        ],
        "capabilities": [
            "Policy checking",
            "Integration with Atlantis workflow",
            "Visual representation of policy check results",
            "Seamless workflow continuation on successful policy validation",
            "Compliance enforcement"
        ],
        "references": [
            "https://alpha.razorpay.com/_static/file/7e516878fe263969188f40def0319219.png \"left-50\""
        ]
    },
    {
        "id": "engineering_devops_run-books-and-sops_checkov-policy-checking-in-atlantis-chunk-2",
        "name": "Checkov Policy Checking in Atlantis.txt - 1. All policy checks have passed: No change in workflow",
        "breadcrumb": [
            "Engineering",
            "DevOps",
            "Run books and SOPs"
        ],
        "description": "This section explains that if all the policy checks pass during the Atlantis workflow, there will be no additional steps required, and you can proceed with the regular Atlantis commands like 'atlantis apply' as before. It implies that if no policy violations are detected, the workflow remains unchanged.",
        "use_cases": [
            "Integrating policy checks into the Atlantis workflow for infrastructure as code (IaC) deployments",
            "Ensuring compliance with organizational policies before applying infrastructure changes",
            "Streamlining the deployment process when all policies are satisfied"
        ],
        "capabilities": [
            "Policy checking",
            "Compliance validation",
            "Seamless integration with Atlantis workflow",
            "Conditional workflow branching based on policy check results",
            "Maintaining existing Atlantis commands and functionality when policies pass"
        ],
        "references": []
    },
    {
        "id": "engineering_devops_run-books-and-sops_checkov-policy-checking-in-atlantis-chunk-3",
        "name": "Checkov Policy Checking in Atlantis.txt - 2. Some checks are failing:",
        "breadcrumb": [
            "Engineering",
            "DevOps",
            "Run books and SOPs"
        ],
        "description": "This section explains that when Checkov policy checks fail during the Atlantis workflow, it will block the 'apply' command from executing, even if the pull request has been approved. It provides an example of the error message that will be displayed when attempting to apply changes with failing policy checks. The section suggests that to resolve this issue, the misconfigurations identified by the policy checks need to be fixed.",
        "use_cases": [
            "Enforcing compliance with security and best practice policies during infrastructure as code deployments",
            "Preventing non-compliant infrastructure changes from being applied",
            "Identifying and remediating misconfigurations in infrastructure as code definitions"
        ],
        "capabilities": [
            "Policy checking",
            "Blocking non-compliant deployments",
            "Error reporting for failed policy checks",
            "Integration with Atlantis workflow",
            "Identification of misconfigurations",
            "Remediation guidance"
        ],
        "references": []
    },
    {
        "id": "engineering_devops_run-books-and-sops_checkov-policy-checking-in-atlantis-chunk-4",
        "name": "Checkov Policy Checking in Atlantis.txt - What if policy check is failing for a PR?",
        "breadcrumb": [
            "Engineering",
            "DevOps",
            "Run books and SOPs"
        ],
        "description": "This section explains the steps to take when a policy check fails during a pull request (PR) review process in Atlantis. If the policy check fails, it means there are violations in the code that need to be addressed. The developer should review the details provided in the failing checks, fix the violations in their code, and then re-run the 'atlantis plan' command. If all policy checks pass after the code changes, the developer can proceed with the 'atlantis apply' command to apply the changes.",
        "use_cases": [
            "Enforcing policy compliance during code review process",
            "Identifying and fixing policy violations before deploying code changes",
            "Automating policy checks as part of the development workflow"
        ],
        "capabilities": [
            "Policy checking",
            "Violation reporting",
            "Code patching",
            "Command execution",
            "Conditional deployment"
        ],
        "references": []
    },
    {
        "id": "engineering_devops_run-books-and-sops_checkov-policy-checking-in-atlantis-chunk-5",
        "name": "Checkov Policy Checking in Atlantis.txt - Fix the misconfigurations",
        "breadcrumb": [
            "Engineering",
            "DevOps",
            "Run books and SOPs"
        ],
        "description": "This section explains how to intentionally skip certain policy checks for resources or modules in Terraform code when there is a valid reason for violating those policies. It suggests adding a comment within the resource or module block to indicate that the violation is intentional and should be ignored by the policy checking tool.",
        "use_cases": [
            "Allowing intentional policy violations for specific resources or modules",
            "Overriding policy checks when necessary",
            "Customizing policy enforcement based on project requirements"
        ],
        "capabilities": [
            "Skipping policy checks",
            "Intentional policy violation",
            "Commenting within resource/module blocks",
            "Customizable policy enforcement",
            "Overriding default policy behavior"
        ],
        "references": []
    },
    {
        "id": "engineering_devops_run-books-and-sops_checkov-policy-checking-in-atlantis-chunk-6",
        "name": "Checkov Policy Checking in Atlantis.txt - Intentional Violations",
        "breadcrumb": [
            "Engineering",
            "DevOps",
            "Run books and SOPs"
        ],
        "description": "This section explains how to intentionally skip certain policy checks in Checkov when running Atlantis commands. It provides a specific format to use in the code to skip individual or multiple policy checks along with a reason for skipping them. This allows developers to bypass certain checks when necessary, while still maintaining overall policy compliance.",
        "use_cases": [
            "Skipping specific policy checks when necessary",
            "Providing a reason for skipping checks",
            "Bypassing checks temporarily during development or testing",
            "Maintaining overall policy compliance while allowing exceptions"
        ],
        "capabilities": [
            "Skip individual policy checks",
            "Skip multiple policy checks",
            "Provide reason for skipping checks",
            "Re-run Atlantis plan command after skipping checks",
            "Proceed with Atlantis apply command if checks pass"
        ],
        "references": [
            "https://alpha.razorpay.com/_static/file/77a400c3b24c883bd8bd3a50788d9e42.png \"left-50\""
        ]
    },
    {
        "id": "engineering_devops_run-books-and-sops_checkov-policy-checking-in-atlantis-chunk-7",
        "name": "Checkov Policy Checking in Atlantis.txt - NOTE FOR DEVOPS",
        "breadcrumb": [
            "Engineering",
            "DevOps",
            "Run books and SOPs"
        ],
        "description": "This section appears to be intentionally left blank, as it contains only backslash characters. It does not provide any meaningful information or explanation regarding Checkov Policy Checking in Atlantis.",
        "use_cases": [],
        "capabilities": [],
        "references": []
    },
    {
        "id": "engineering_devops_run-books-and-sops_checkov-policy-checking-in-atlantis-chunk-8",
        "name": "Checkov Policy Checking in Atlantis.txt - PR APPROVAL",
        "breadcrumb": [
            "Engineering",
            "DevOps",
            "Run books and SOPs"
        ],
        "description": "This section provides guidance for DevOps personnel during the code review process for pull requests (PRs). It emphasizes the importance of carefully examining any instances where Checkov policy checks have been intentionally skipped using a specific comment format. The section advises ensuring that skipping a check is absolutely necessary and that a proper justification is provided for doing so.",
        "use_cases": [
            "Code review process for pull requests",
            "Ensuring security best practices are followed",
            "Evaluating exceptions to security policies",
            "Maintaining proper documentation and reasoning for policy exceptions"
        ],
        "capabilities": [
            "Checkov policy checking",
            "Skipping policy checks",
            "Providing justification for skipped checks",
            "Code review guidelines",
            "Security policy enforcement",
            "Documentation requirements"
        ],
        "references": []
    },
    {
        "id": "engineering_devops_run-books-and-sops_checkov-policy-checking-in-atlantis-chunk-9",
        "name": "Checkov Policy Checking in Atlantis.txt - OVERRIDE POLICY CHECK",
        "breadcrumb": [
            "Engineering",
            "DevOps",
            "Run books and SOPs"
        ],
        "description": "This section explains an override option in Atlantis, a tool for managing infrastructure as code deployments. It describes a command called 'atlantis approve_policies' that allows skipping policy checks, which are typically required before applying infrastructure changes. This override is intended for urgent scenarios or incidents where deploying infrastructure quickly is critical. However, the section also notes that only lead DevOps personnel and above have permission to use this command, implying it should be used judiciously.",
        "use_cases": [
            "Urgent scenarios or incidents where infrastructure deployment is time-critical",
            "Situations where policy checks need to be temporarily bypassed to expedite deployment"
        ],
        "capabilities": [
            "Override policy checks",
            "Skip policy check requirement",
            "Expedite infrastructure deployment",
            "Restricted access to override command"
        ],
        "references": [
            "https://docs.google.com/spreadsheets/d/18ECSwQ49mkvsPVs-QLYyF59FbcZLmtuWIkZIzKnlfUU/edit#gid=0"
        ]
    }
]